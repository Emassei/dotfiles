#!/bin/sh

running_instances=$(aws ec2 describe-instances --query 'Reservations[*].Instances[*].Tags[0].Value' --filters Name=instance-state-name,Values=running --output text)


stopped_instances=$(aws ec2 describe-instances --query 'Reservations[*].Instances[*].Tags[0].Value' --filters Name=instance-state-name,Values=stopped --output text)

  figlet "Running Instances" -f digital
  if [ -z $running_instances ]; then
    echo 'None'
  else
  echo $running_instances | sed 's/ /\n/g'
  fi

  figlet "Stopped Instances" -f digital
  echo $stopped_instances | sed 's/ /\n/g'

printf "\n"

instances=($(aws ec2 describe-instances --query "Reservations[].Instances[].Tags[0].Value" --output text))

echo "Which instance do you want to use"
select choice in "${instances[@]}"; do
  [[ -n $choice ]] || { echo "Invalid choice. Please try again." >&2; continue; }
  name=$choice
  break
done

instance_id=$(aws ec2 describe-instances --filters 'Name=tag:Name,Values='$name --output text --query 'Reservations[*].Instances[*].InstanceId')

echo "What do you want to do with your instance?"

select answer in "Start" "Stop" "Check_Instance_Status" "Check_All_Instances"; do
  case $answer in
    Start ) aws ec2 start-instances --instance-ids $instance_id; break;;
    Stop ) aws ec2 stop-instances --instance-ids $instance_id; break;;
    Check_Instance_Status ) aws ec2 describe-instance-status --instance-id $instance_id; break;;
    Check_All_Instances ) aws ec2 describe-instances; break;;
  esac
done

url=$(aws ec2 describe-instances --filters 'Name=tag:Name,Values='$name --output text --query 'Reservations[*].Instances[*].PublicDnsName' --output text)

if [ ! -z $url ]; then
  sed -i "s/aws_site='.*'/aws_site='ssh ubuntu@$url'/" $XDG_CONFIG_HOME/zsh/.zshrc;
fi
