#!/bin/sh

laptop_screen=$(xrandr -q | grep -i "edp" | awk '{print $1}')
hdmi_screen=$(xrandr -q | grep -i "\-2\-1" | awk '{print $1}')


onescreen() { # If only one output available or chosen.
	xrandr --output $1 --auto --output $2 --off
	}

onescreen_dock(){
	xrandr --output $1 --auto --output $2 --off
}
# Get all possible displays
allposs=$(xrandr -q | grep " connected")

# Get all connected screens.
screens=$(echo "$allposs" | awk '/ connected/ {print $1}')

twoscreens() {
#two screens not mirroring
  xrandr --output $hdmi_screen --auto --output $laptop_screen --auto --right-of $hdmi_screen
}

twomirroredscreens() {
#Two screens mirrored
  xrandr --output $hdmi_screen --auto --output $laptop_screen --auto
}

#This is for the hdmi tv
xrandr --output HDMI-1 --auto

# Get user choice including multi-monitor and manual selection:
chosen=$(printf "External Monitor\\nLaptop Display\\nTwo Monitors\\nTV\\nMirrored" "$screens" | dmenu -i -p "Select Display Option:") &&

if [ "$chosen" == "External Monitor" ]; then
       	onescreen $hdmi_screen $laptop_screen
elif [ "$chosen" == "Laptop Display" ]; then
       	onescreen  $laptop_screen $hdmi_screen
elif [ "$chosen" == "Two Monitors" ]; then
        twoscreens
elif [ "$chosen" == "TV" ]; then
	xrandr --output HDMI-1 --auto
else
  twomirroredscreens
fi
